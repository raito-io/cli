syntax = "proto3";
package access_provider;

import "google/protobuf/empty.proto";
import "util/config/config.proto";
import "util/error/error.proto";
import "util/version/version.proto";

// AccessSyncToTarget contains all necessary configuration parameters to export Data from Raito into DS
message AccessSyncToTarget {
  util.config.ConfigMap config_map = 1;

  // SourceFile points to the file containing the access controls that need to be pushed to the data source.
  string source_file = 2;

  // FeedbackTargetFile points to the file where the plugin needs to export the access controls feedback to.
  string feedback_target_file = 3;
  string prefix = 4;

  string test = 5;
}

// AccessSyncFromTarget contains all necessary configuration parameters to import Data from Raito into DS
message AccessSyncFromTarget {
  util.config.ConfigMap config_map = 1;

  // TargetFile points to the file where the plugin needs to export the access control naming.
  string target_file = 2;
  string prefix = 3;
  bool lock_all_who = 4;
  bool lock_all_what = 5;
  bool lock_all_names = 6;
  bool lock_all_delete = 7;
  bool lock_all_inheritance = 8;
  repeated string make_not_internalizable = 9;
  bool lock_all_owners = 10;
  repeated string lock_who_by_name = 11;
  repeated string lock_who_by_tag = 12;
  bool lock_who_when_incomplete = 13;
  repeated string lock_what_by_name = 14;
  repeated string lock_what_by_tag = 15;
  bool lock_what_when_incomplete = 16;
  repeated string lock_inheritance_by_name = 17;
  repeated string lock_inheritance_by_tag = 18;
  bool lock_inheritance_when_incomplete = 19;
  bool fully_lock_all = 20;
  repeated string fully_lock_by_name = 21;
  repeated string fully_lock_by_tag = 22;
  bool fully_lock_when_incomplete = 23;
  repeated string lock_names_by_name = 24;
  repeated string lock_names_by_tag = 25;
  bool lock_names_when_incomplete = 26;
  repeated string lock_delete_by_name = 27;
  repeated string lock_delete_by_tag = 28;
  bool lock_delete_when_incomplete = 29;
}

// AccessSyncResult represents the result from the data access sync process.
// A potential error is also modeled in here so specific errors remain intact when passed over RPC.
message AccessSyncResult {
  util.error.ErrorResult error = 1 [deprecated = true];
  int32 access_provider_count = 2;
}

// AccessSyncConfig gives us information on how the CLI can sync access providers
message AccessSyncConfig {
  // SupportPartialSync if true, syncing only out of sync access providers is allowed
  bool support_partial_sync = 1;

  reserved 2, 3; // deprecated old fields
}

service AccessProviderSyncService {
  rpc CliVersionInformation(google.protobuf.Empty) returns (util.version.CliBuildInformation);

  rpc SyncFromTarget(AccessSyncFromTarget) returns (AccessSyncResult);
  rpc SyncToTarget(AccessSyncToTarget) returns (AccessSyncResult);

  rpc SyncConfig(google.protobuf.Empty) returns (AccessSyncConfig);
}
