// Code generated by mockery v2.39.1. DO NOT EDIT.

package mocks

import (
	data_source "github.com/raito-io/cli/base/data_source"
	mock "github.com/stretchr/testify/mock"
)

// DataSourceFileCreator is an autogenerated mock type for the DataSourceFileCreator type
type DataSourceFileCreator struct {
	mock.Mock
}

type DataSourceFileCreator_Expecter struct {
	mock *mock.Mock
}

func (_m *DataSourceFileCreator) EXPECT() *DataSourceFileCreator_Expecter {
	return &DataSourceFileCreator_Expecter{mock: &_m.Mock}
}

// AddDataObjects provides a mock function with given fields: dataObjects
func (_m *DataSourceFileCreator) AddDataObjects(dataObjects ...*data_source.DataObject) error {
	_va := make([]interface{}, len(dataObjects))
	for _i := range dataObjects {
		_va[_i] = dataObjects[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for AddDataObjects")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(...*data_source.DataObject) error); ok {
		r0 = rf(dataObjects...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DataSourceFileCreator_AddDataObjects_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddDataObjects'
type DataSourceFileCreator_AddDataObjects_Call struct {
	*mock.Call
}

// AddDataObjects is a helper method to define mock.On call
//   - dataObjects ...*data_source.DataObject
func (_e *DataSourceFileCreator_Expecter) AddDataObjects(dataObjects ...interface{}) *DataSourceFileCreator_AddDataObjects_Call {
	return &DataSourceFileCreator_AddDataObjects_Call{Call: _e.mock.On("AddDataObjects",
		append([]interface{}{}, dataObjects...)...)}
}

func (_c *DataSourceFileCreator_AddDataObjects_Call) Run(run func(dataObjects ...*data_source.DataObject)) *DataSourceFileCreator_AddDataObjects_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]*data_source.DataObject, len(args)-0)
		for i, a := range args[0:] {
			if a != nil {
				variadicArgs[i] = a.(*data_source.DataObject)
			}
		}
		run(variadicArgs...)
	})
	return _c
}

func (_c *DataSourceFileCreator_AddDataObjects_Call) Return(_a0 error) *DataSourceFileCreator_AddDataObjects_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *DataSourceFileCreator_AddDataObjects_Call) RunAndReturn(run func(...*data_source.DataObject) error) *DataSourceFileCreator_AddDataObjects_Call {
	_c.Call.Return(run)
	return _c
}

// Close provides a mock function with given fields:
func (_m *DataSourceFileCreator) Close() {
	_m.Called()
}

// DataSourceFileCreator_Close_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Close'
type DataSourceFileCreator_Close_Call struct {
	*mock.Call
}

// Close is a helper method to define mock.On call
func (_e *DataSourceFileCreator_Expecter) Close() *DataSourceFileCreator_Close_Call {
	return &DataSourceFileCreator_Close_Call{Call: _e.mock.On("Close")}
}

func (_c *DataSourceFileCreator_Close_Call) Run(run func()) *DataSourceFileCreator_Close_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *DataSourceFileCreator_Close_Call) Return() *DataSourceFileCreator_Close_Call {
	_c.Call.Return()
	return _c
}

func (_c *DataSourceFileCreator_Close_Call) RunAndReturn(run func()) *DataSourceFileCreator_Close_Call {
	_c.Call.Return(run)
	return _c
}

// GetDataObjectCount provides a mock function with given fields:
func (_m *DataSourceFileCreator) GetDataObjectCount() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetDataObjectCount")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// DataSourceFileCreator_GetDataObjectCount_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetDataObjectCount'
type DataSourceFileCreator_GetDataObjectCount_Call struct {
	*mock.Call
}

// GetDataObjectCount is a helper method to define mock.On call
func (_e *DataSourceFileCreator_Expecter) GetDataObjectCount() *DataSourceFileCreator_GetDataObjectCount_Call {
	return &DataSourceFileCreator_GetDataObjectCount_Call{Call: _e.mock.On("GetDataObjectCount")}
}

func (_c *DataSourceFileCreator_GetDataObjectCount_Call) Run(run func()) *DataSourceFileCreator_GetDataObjectCount_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *DataSourceFileCreator_GetDataObjectCount_Call) Return(_a0 int) *DataSourceFileCreator_GetDataObjectCount_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *DataSourceFileCreator_GetDataObjectCount_Call) RunAndReturn(run func() int) *DataSourceFileCreator_GetDataObjectCount_Call {
	_c.Call.Return(run)
	return _c
}

// GetDataSourceDetails provides a mock function with given fields:
func (_m *DataSourceFileCreator) GetDataSourceDetails() *data_source.DataSourceDetails {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetDataSourceDetails")
	}

	var r0 *data_source.DataSourceDetails
	if rf, ok := ret.Get(0).(func() *data_source.DataSourceDetails); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*data_source.DataSourceDetails)
		}
	}

	return r0
}

// DataSourceFileCreator_GetDataSourceDetails_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetDataSourceDetails'
type DataSourceFileCreator_GetDataSourceDetails_Call struct {
	*mock.Call
}

// GetDataSourceDetails is a helper method to define mock.On call
func (_e *DataSourceFileCreator_Expecter) GetDataSourceDetails() *DataSourceFileCreator_GetDataSourceDetails_Call {
	return &DataSourceFileCreator_GetDataSourceDetails_Call{Call: _e.mock.On("GetDataSourceDetails")}
}

func (_c *DataSourceFileCreator_GetDataSourceDetails_Call) Run(run func()) *DataSourceFileCreator_GetDataSourceDetails_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *DataSourceFileCreator_GetDataSourceDetails_Call) Return(_a0 *data_source.DataSourceDetails) *DataSourceFileCreator_GetDataSourceDetails_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *DataSourceFileCreator_GetDataSourceDetails_Call) RunAndReturn(run func() *data_source.DataSourceDetails) *DataSourceFileCreator_GetDataSourceDetails_Call {
	_c.Call.Return(run)
	return _c
}

// SetDataSourceDescription provides a mock function with given fields: desc
func (_m *DataSourceFileCreator) SetDataSourceDescription(desc string) {
	_m.Called(desc)
}

// DataSourceFileCreator_SetDataSourceDescription_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetDataSourceDescription'
type DataSourceFileCreator_SetDataSourceDescription_Call struct {
	*mock.Call
}

// SetDataSourceDescription is a helper method to define mock.On call
//   - desc string
func (_e *DataSourceFileCreator_Expecter) SetDataSourceDescription(desc interface{}) *DataSourceFileCreator_SetDataSourceDescription_Call {
	return &DataSourceFileCreator_SetDataSourceDescription_Call{Call: _e.mock.On("SetDataSourceDescription", desc)}
}

func (_c *DataSourceFileCreator_SetDataSourceDescription_Call) Run(run func(desc string)) *DataSourceFileCreator_SetDataSourceDescription_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *DataSourceFileCreator_SetDataSourceDescription_Call) Return() *DataSourceFileCreator_SetDataSourceDescription_Call {
	_c.Call.Return()
	return _c
}

func (_c *DataSourceFileCreator_SetDataSourceDescription_Call) RunAndReturn(run func(string)) *DataSourceFileCreator_SetDataSourceDescription_Call {
	_c.Call.Return(run)
	return _c
}

// SetDataSourceFullname provides a mock function with given fields: name
func (_m *DataSourceFileCreator) SetDataSourceFullname(name string) {
	_m.Called(name)
}

// DataSourceFileCreator_SetDataSourceFullname_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetDataSourceFullname'
type DataSourceFileCreator_SetDataSourceFullname_Call struct {
	*mock.Call
}

// SetDataSourceFullname is a helper method to define mock.On call
//   - name string
func (_e *DataSourceFileCreator_Expecter) SetDataSourceFullname(name interface{}) *DataSourceFileCreator_SetDataSourceFullname_Call {
	return &DataSourceFileCreator_SetDataSourceFullname_Call{Call: _e.mock.On("SetDataSourceFullname", name)}
}

func (_c *DataSourceFileCreator_SetDataSourceFullname_Call) Run(run func(name string)) *DataSourceFileCreator_SetDataSourceFullname_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *DataSourceFileCreator_SetDataSourceFullname_Call) Return() *DataSourceFileCreator_SetDataSourceFullname_Call {
	_c.Call.Return()
	return _c
}

func (_c *DataSourceFileCreator_SetDataSourceFullname_Call) RunAndReturn(run func(string)) *DataSourceFileCreator_SetDataSourceFullname_Call {
	_c.Call.Return(run)
	return _c
}

// SetDataSourceName provides a mock function with given fields: name
func (_m *DataSourceFileCreator) SetDataSourceName(name string) {
	_m.Called(name)
}

// DataSourceFileCreator_SetDataSourceName_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetDataSourceName'
type DataSourceFileCreator_SetDataSourceName_Call struct {
	*mock.Call
}

// SetDataSourceName is a helper method to define mock.On call
//   - name string
func (_e *DataSourceFileCreator_Expecter) SetDataSourceName(name interface{}) *DataSourceFileCreator_SetDataSourceName_Call {
	return &DataSourceFileCreator_SetDataSourceName_Call{Call: _e.mock.On("SetDataSourceName", name)}
}

func (_c *DataSourceFileCreator_SetDataSourceName_Call) Run(run func(name string)) *DataSourceFileCreator_SetDataSourceName_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *DataSourceFileCreator_SetDataSourceName_Call) Return() *DataSourceFileCreator_SetDataSourceName_Call {
	_c.Call.Return()
	return _c
}

func (_c *DataSourceFileCreator_SetDataSourceName_Call) RunAndReturn(run func(string)) *DataSourceFileCreator_SetDataSourceName_Call {
	_c.Call.Return(run)
	return _c
}

// NewDataSourceFileCreator creates a new instance of DataSourceFileCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDataSourceFileCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *DataSourceFileCreator {
	mock := &DataSourceFileCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
