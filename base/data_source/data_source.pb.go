// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: data_source/data_source.proto

package data_source

import (
	config "github.com/raito-io/cli/base/util/config"
	error1 "github.com/raito-io/cli/base/util/error"
	version "github.com/raito-io/cli/base/util/version"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DataSourceSyncConfig represents the configuration that is passed from the CLI to the DataAccessSyncer plugin interface.
// It contains all the necessary configuration parameters for the plugin to function.
type DataSourceSyncConfig struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ConfigMap          *config.ConfigMap      `protobuf:"bytes,1,opt,name=config_map,json=configMap,proto3" json:"config_map,omitempty"`
	TargetFile         string                 `protobuf:"bytes,2,opt,name=target_file,json=targetFile,proto3" json:"target_file,omitempty"`
	DataSourceId       string                 `protobuf:"bytes,3,opt,name=data_source_id,json=dataSourceId,proto3" json:"data_source_id,omitempty"`
	DataObjectParent   string                 `protobuf:"bytes,4,opt,name=data_object_parent,json=dataObjectParent,proto3" json:"data_object_parent,omitempty"`
	DataObjectExcludes []string               `protobuf:"bytes,5,rep,name=data_object_excludes,json=dataObjectExcludes,proto3" json:"data_object_excludes,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DataSourceSyncConfig) Reset() {
	*x = DataSourceSyncConfig{}
	mi := &file_data_source_data_source_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataSourceSyncConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSourceSyncConfig) ProtoMessage() {}

func (x *DataSourceSyncConfig) ProtoReflect() protoreflect.Message {
	mi := &file_data_source_data_source_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSourceSyncConfig.ProtoReflect.Descriptor instead.
func (*DataSourceSyncConfig) Descriptor() ([]byte, []int) {
	return file_data_source_data_source_proto_rawDescGZIP(), []int{0}
}

func (x *DataSourceSyncConfig) GetConfigMap() *config.ConfigMap {
	if x != nil {
		return x.ConfigMap
	}
	return nil
}

func (x *DataSourceSyncConfig) GetTargetFile() string {
	if x != nil {
		return x.TargetFile
	}
	return ""
}

func (x *DataSourceSyncConfig) GetDataSourceId() string {
	if x != nil {
		return x.DataSourceId
	}
	return ""
}

func (x *DataSourceSyncConfig) GetDataObjectParent() string {
	if x != nil {
		return x.DataObjectParent
	}
	return ""
}

func (x *DataSourceSyncConfig) GetDataObjectExcludes() []string {
	if x != nil {
		return x.DataObjectExcludes
	}
	return nil
}

// DataSourceSyncResult represents the result from the data source sync process.
// A potential error is also modeled in here so specific errors remain intact when passed over RPC.
type DataSourceSyncResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in data_source/data_source.proto.
	Error         *error1.ErrorResult `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	DataObjects   int32               `protobuf:"varint,2,opt,name=data_objects,json=dataObjects,proto3" json:"data_objects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataSourceSyncResult) Reset() {
	*x = DataSourceSyncResult{}
	mi := &file_data_source_data_source_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataSourceSyncResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSourceSyncResult) ProtoMessage() {}

func (x *DataSourceSyncResult) ProtoReflect() protoreflect.Message {
	mi := &file_data_source_data_source_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSourceSyncResult.ProtoReflect.Descriptor instead.
func (*DataSourceSyncResult) Descriptor() ([]byte, []int) {
	return file_data_source_data_source_proto_rawDescGZIP(), []int{1}
}

// Deprecated: Marked as deprecated in data_source/data_source.proto.
func (x *DataSourceSyncResult) GetError() *error1.ErrorResult {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *DataSourceSyncResult) GetDataObjects() int32 {
	if x != nil {
		return x.DataObjects
	}
	return 0
}

// NoLinting ToSupport GQL schema (temporarily)
type MetaData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DataObjectTypes describes the data object types that are available in the data source
	DataObjectTypes []*DataObjectType `protobuf:"bytes,1,rep,name=dataObjectTypes,proto3" json:"dataObjectTypes,omitempty"`
	// SupportedFeatures is a list of features supported by the data source
	// Currently supported features: columnMasking, rowFiltering, columnFiltering
	SupportedFeatures []string `protobuf:"bytes,2,rep,name=supportedFeatures,proto3" json:"supportedFeatures,omitempty"`
	// Type indicates the type of data source (Snowflake, BigQuery, etc.).
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// Icon the name or base64 encoded version of the icon to use for this data source.
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	// UsageMetaInfo describes the usage metadata for this data source.
	UsageMetaInfo *UsageMetaInput `protobuf:"bytes,5,opt,name=usageMetaInfo,proto3" json:"usageMetaInfo,omitempty"`
	// AccessProviderTypes describes the access provider types that are available in the data source
	AccessProviderTypes []*AccessProviderType `protobuf:"bytes,6,rep,name=accessProviderTypes,proto3" json:"accessProviderTypes,omitempty"`
	// SupportsApInheritance indicates whether the data source supports AP inheritance
	SupportsApInheritance bool `protobuf:"varint,7,opt,name=supportsApInheritance,proto3" json:"supportsApInheritance,omitempty"`
	// maskingMetadata provides addition information about available column masks
	MaskingMetadata *MaskingMetadata `protobuf:"bytes,8,opt,name=maskingMetadata,proto3" json:"maskingMetadata,omitempty"`
	// filterMetadata provides addition information about available row filters
	FilterMetadata *FilterMetadata `protobuf:"bytes,9,opt,name=filterMetadata,proto3" json:"filterMetadata,omitempty"`
	// shareMetadata provides additional information about data sharing
	ShareMetadata *ShareMetadata `protobuf:"bytes,10,opt,name=shareMetadata,proto3" json:"shareMetadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetaData) Reset() {
	*x = MetaData{}
	mi := &file_data_source_data_source_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaData) ProtoMessage() {}

func (x *MetaData) ProtoReflect() protoreflect.Message {
	mi := &file_data_source_data_source_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaData.ProtoReflect.Descriptor instead.
func (*MetaData) Descriptor() ([]byte, []int) {
	return file_data_source_data_source_proto_rawDescGZIP(), []int{2}
}

func (x *MetaData) GetDataObjectTypes() []*DataObjectType {
	if x != nil {
		return x.DataObjectTypes
	}
	return nil
}

func (x *MetaData) GetSupportedFeatures() []string {
	if x != nil {
		return x.SupportedFeatures
	}
	return nil
}

func (x *MetaData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MetaData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MetaData) GetUsageMetaInfo() *UsageMetaInput {
	if x != nil {
		return x.UsageMetaInfo
	}
	return nil
}

func (x *MetaData) GetAccessProviderTypes() []*AccessProviderType {
	if x != nil {
		return x.AccessProviderTypes
	}
	return nil
}

func (x *MetaData) GetSupportsApInheritance() bool {
	if x != nil {
		return x.SupportsApInheritance
	}
	return false
}

func (x *MetaData) GetMaskingMetadata() *MaskingMetadata {
	if x != nil {
		return x.MaskingMetadata
	}
	return nil
}

func (x *MetaData) GetFilterMetadata() *FilterMetadata {
	if x != nil {
		return x.FilterMetadata
	}
	return nil
}

func (x *MetaData) GetShareMetadata() *ShareMetadata {
	if x != nil {
		return x.ShareMetadata
	}
	return nil
}

type DataObjectType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name, The internal technical name used to reference the data object type. This must be unique.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Type is used to group conceptually similar data object types. Data object types with the same type will be shown in the same table in the UI. E.g. shared-table and table both have the type table.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Label, a display name for the type to be used in the UI
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	// Icon, The name or base64 encoded version of the icon to use for this data source.
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	// Permissions describes all the permissions that could be applied on this data object type.
	Permissions []*DataObjectTypePermission `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// Actions describes all the actions that could be performed on this data object type.
	Actions []*DataObjectTypeAction `protobuf:"bytes,6,rep,name=actions,proto3" json:"actions,omitempty"`
	// Children describes all the data object types that could be a direct child of this data object type.
	Children []string `protobuf:"bytes,7,rep,name=children,proto3" json:"children,omitempty"`
	// DataOrigin describes the origin of the data object type.
	DataOrigin      string                     `protobuf:"bytes,8,opt,name=dataOrigin,proto3" json:"dataOrigin,omitempty"`
	ShareProperties *DataObjectShareProperties `protobuf:"bytes,9,opt,name=shareProperties,proto3" json:"shareProperties,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DataObjectType) Reset() {
	*x = DataObjectType{}
	mi := &file_data_source_data_source_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataObjectType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataObjectType) ProtoMessage() {}

func (x *DataObjectType) ProtoReflect() protoreflect.Message {
	mi := &file_data_source_data_source_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataObjectType.ProtoReflect.Descriptor instead.
func (*DataObjectType) Descriptor() ([]byte, []int) {
	return file_data_source_data_source_proto_rawDescGZIP(), []int{3}
}

func (x *DataObjectType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataObjectType) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DataObjectType) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DataObjectType) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *DataObjectType) GetPermissions() []*DataObjectTypePermission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *DataObjectType) GetActions() []*DataObjectTypeAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *DataObjectType) GetChildren() []string {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *DataObjectType) GetDataOrigin() string {
	if x != nil {
		return x.DataOrigin
	}
	return ""
}

func (x *DataObjectType) GetShareProperties() *DataObjectShareProperties {
	if x != nil {
		return x.ShareProperties
	}
	return nil
}

type AccessProviderType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type, The (internal) name of the type
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Label, A human readable name for the access provider
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// Icon, The name or base64 encoded version of the icon to use for this access provider
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// IsNamedEntity indicates if the access provider represents a named entity (like a role or a policy) in the data source. False, typically means some kind of ACL system (nameless bindings).
	IsNamedEntity bool `protobuf:"varint,4,opt,name=isNamedEntity,proto3" json:"isNamedEntity,omitempty"`
	// CanBeCreated indicates whether the access provider can be created from the Raito Cloud UI or not
	CanBeCreated bool `protobuf:"varint,5,opt,name=canBeCreated,proto3" json:"canBeCreated,omitempty"`
	// CanBeAssumed indicates that this (named entity) is something the user has to ‘assume’ to get these permissions. Typically, a role.
	CanBeAssumed bool `protobuf:"varint,6,opt,name=canBeAssumed,proto3" json:"canBeAssumed,omitempty"`
	// CanAssumeMultiple indicates that the user can assume multiple (roles).
	CanAssumeMultiple bool `protobuf:"varint,7,opt,name=canAssumeMultiple,proto3" json:"canAssumeMultiple,omitempty"`
	// Deprecated: Marked as deprecated in data_source/data_source.proto.
	ContainsWhat bool `protobuf:"varint,8,opt,name=containsWhat,proto3" json:"containsWhat,omitempty"`
	// Deprecated: Marked as deprecated in data_source/data_source.proto.
	ContainsWho bool `protobuf:"varint,9,opt,name=containsWho,proto3" json:"containsWho,omitempty"`
	// Deprecated: Marked as deprecated in data_source/data_source.proto.
	WhoInputTypes []string `protobuf:"bytes,10,rep,name=whoInputTypes,proto3" json:"whoInputTypes,omitempty"`
	// IdentityStoreTypeForWho can be used to specify from which identity store type the WHO can come from.
	// This was specifically called to life for supporting the case of AWS permission sets as they become special roles in the AWS account data sources but should only use users and groups from the AWS organization (which is a linked identity store of the aws account data sources).
	IdentityStoreTypeForWho string `protobuf:"bytes,11,opt,name=identityStoreTypeForWho,proto3" json:"identityStoreTypeForWho,omitempty"`
	// AllowedWhoAccessProviderTypes lists of access provider types that could be in the who list of this access provider type
	// Nil indicates that all access provider types are allowed. Otherwise only defined access provider types are allowed to be part of the who list of this access provider type.
	AllowedWhoAccessProviderTypes []string `protobuf:"bytes,12,rep,name=allowedWhoAccessProviderTypes,proto3" json:"allowedWhoAccessProviderTypes,omitempty"`
	// commonParentType this access provider type lives in a subset of the data source.
	// This can be used to define database roles, application roles, etc.
	CommonParentType *string `protobuf:"bytes,13,opt,name=commonParentType,proto3,oneof" json:"commonParentType,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AccessProviderType) Reset() {
	*x = AccessProviderType{}
	mi := &file_data_source_data_source_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessProviderType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessProviderType) ProtoMessage() {}

func (x *AccessProviderType) ProtoReflect() protoreflect.Message {
	mi := &file_data_source_data_source_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessProviderType.ProtoReflect.Descriptor instead.
func (*AccessProviderType) Descriptor() ([]byte, []int) {
	return file_data_source_data_source_proto_rawDescGZIP(), []int{4}
}

func (x *AccessProviderType) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AccessProviderType) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *AccessProviderType) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AccessProviderType) GetIsNamedEntity() bool {
	if x != nil {
		return x.IsNamedEntity
	}
	return false
}

func (x *AccessProviderType) GetCanBeCreated() bool {
	if x != nil {
		return x.CanBeCreated
	}
	return false
}

func (x *AccessProviderType) GetCanBeAssumed() bool {
	if x != nil {
		return x.CanBeAssumed
	}
	return false
}

func (x *AccessProviderType) GetCanAssumeMultiple() bool {
	if x != nil {
		return x.CanAssumeMultiple
	}
	return false
}

// Deprecated: Marked as deprecated in data_source/data_source.proto.
func (x *AccessProviderType) GetContainsWhat() bool {
	if x != nil {
		return x.ContainsWhat
	}
	return false
}

// Deprecated: Marked as deprecated in data_source/data_source.proto.
func (x *AccessProviderType) GetContainsWho() bool {
	if x != nil {
		return x.ContainsWho
	}
	return false
}

// Deprecated: Marked as deprecated in data_source/data_source.proto.
func (x *AccessProviderType) GetWhoInputTypes() []string {
	if x != nil {
		return x.WhoInputTypes
	}
	return nil
}

func (x *AccessProviderType) GetIdentityStoreTypeForWho() string {
	if x != nil {
		return x.IdentityStoreTypeForWho
	}
	return ""
}

func (x *AccessProviderType) GetAllowedWhoAccessProviderTypes() []string {
	if x != nil {
		return x.AllowedWhoAccessProviderTypes
	}
	return nil
}

func (x *AccessProviderType) GetCommonParentType() string {
	if x != nil && x.CommonParentType != nil {
		return *x.CommonParentType
	}
	return ""
}

type MaskingMetadata struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	MaskTypes               []*MaskingType         `protobuf:"bytes,1,rep,name=maskTypes,proto3" json:"maskTypes,omitempty"`
	DefaultMaskExternalName string                 `protobuf:"bytes,2,opt,name=defaultMaskExternalName,proto3" json:"defaultMaskExternalName,omitempty"`
	MaskOverridePermissions []string               `protobuf:"bytes,3,rep,name=maskOverridePermissions,proto3" json:"maskOverridePermissions,omitempty"`
	ApplicableTypes         []string               `protobuf:"bytes,4,rep,name=applicableTypes,proto3" json:"applicableTypes,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *MaskingMetadata) Reset() {
	*x = MaskingMetadata{}
	mi := &file_data_source_data_source_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaskingMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskingMetadata) ProtoMessage() {}

func (x *MaskingMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_data_source_data_source_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskingMetadata.ProtoReflect.Descriptor instead.
func (*MaskingMetadata) Descriptor() ([]byte, []int) {
	return file_data_source_data_source_proto_rawDescGZIP(), []int{5}
}

func (x *MaskingMetadata) GetMaskTypes() []*MaskingType {
	if x != nil {
		return x.MaskTypes
	}
	return nil
}

func (x *MaskingMetadata) GetDefaultMaskExternalName() string {
	if x != nil {
		return x.DefaultMaskExternalName
	}
	return ""
}

func (x *MaskingMetadata) GetMaskOverridePermissions() []string {
	if x != nil {
		return x.MaskOverridePermissions
	}
	return nil
}

func (x *MaskingMetadata) GetApplicableTypes() []string {
	if x != nil {
		return x.ApplicableTypes
	}
	return nil
}

type MaskingType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DisplayName   string                 `protobuf:"bytes,1,opt,name=displayName,proto3" json:"displayName,omitempty"`
	ExternalId    string                 `protobuf:"bytes,2,opt,name=externalId,proto3" json:"externalId,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DataTypes     []string               `protobuf:"bytes,4,rep,name=dataTypes,proto3" json:"dataTypes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaskingType) Reset() {
	*x = MaskingType{}
	mi := &file_data_source_data_source_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaskingType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskingType) ProtoMessage() {}

func (x *MaskingType) ProtoReflect() protoreflect.Message {
	mi := &file_data_source_data_source_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskingType.ProtoReflect.Descriptor instead.
func (*MaskingType) Descriptor() ([]byte, []int) {
	return file_data_source_data_source_proto_rawDescGZIP(), []int{6}
}

func (x *MaskingType) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *MaskingType) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *MaskingType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MaskingType) GetDataTypes() []string {
	if x != nil {
		return x.DataTypes
	}
	return nil
}

type FilterMetadata struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	FilterOverridePermissions []string               `protobuf:"bytes,1,rep,name=filterOverridePermissions,proto3" json:"filterOverridePermissions,omitempty"`
	ApplicableTypes           []string               `protobuf:"bytes,2,rep,name=applicableTypes,proto3" json:"applicableTypes,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *FilterMetadata) Reset() {
	*x = FilterMetadata{}
	mi := &file_data_source_data_source_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterMetadata) ProtoMessage() {}

func (x *FilterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_data_source_data_source_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterMetadata.ProtoReflect.Descriptor instead.
func (*FilterMetadata) Descriptor() ([]byte, []int) {
	return file_data_source_data_source_proto_rawDescGZIP(), []int{7}
}

func (x *FilterMetadata) GetFilterOverridePermissions() []string {
	if x != nil {
		return x.FilterOverridePermissions
	}
	return nil
}

func (x *FilterMetadata) GetApplicableTypes() []string {
	if x != nil {
		return x.ApplicableTypes
	}
	return nil
}

type ShareMetadata struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	ApplicableTypes           []string               `protobuf:"bytes,1,rep,name=applicableTypes,proto3" json:"applicableTypes,omitempty"`
	CommonParentType          string                 `protobuf:"bytes,2,opt,name=commonParentType,proto3" json:"commonParentType,omitempty"`
	DataSourceShareIdentifier string                 `protobuf:"bytes,3,opt,name=dataSourceShareIdentifier,proto3" json:"dataSourceShareIdentifier,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ShareMetadata) Reset() {
	*x = ShareMetadata{}
	mi := &file_data_source_data_source_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareMetadata) ProtoMessage() {}

func (x *ShareMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_data_source_data_source_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareMetadata.ProtoReflect.Descriptor instead.
func (*ShareMetadata) Descriptor() ([]byte, []int) {
	return file_data_source_data_source_proto_rawDescGZIP(), []int{8}
}

func (x *ShareMetadata) GetApplicableTypes() []string {
	if x != nil {
		return x.ApplicableTypes
	}
	return nil
}

func (x *ShareMetadata) GetCommonParentType() string {
	if x != nil {
		return x.CommonParentType
	}
	return ""
}

func (x *ShareMetadata) GetDataSourceShareIdentifier() string {
	if x != nil {
		return x.DataSourceShareIdentifier
	}
	return ""
}

// NoLinting ToSupport GQL schema (temporarily)
type DataObjectTypePermission struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Permission defines the name of the permission as used in the datasource
	Permission string `protobuf:"bytes,1,opt,name=permission,proto3" json:"permission,omitempty"`
	// GlobalPermissions is a list of global permissions (read, write, admin) that this permission should be included in. This is used when expanding the global permission into its specific ones for the datasource
	GlobalPermissions []string `protobuf:"bytes,2,rep,name=globalPermissions,proto3" json:"globalPermissions,omitempty"`
	// Description explanations what this permission does (typically from the documentation of the datasource)
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Deprecated: Marked as deprecated in data_source/data_source.proto.
	Action []string `protobuf:"bytes,4,rep,name=action,proto3" json:"action,omitempty"`
	// UsageGlobalPermissions lists the global permissions (read, write, admin) for which this permission should be counted for the usage.
	UsageGlobalPermissions []string `protobuf:"bytes,5,rep,name=usageGlobalPermissions,proto3" json:"usageGlobalPermissions,omitempty"`
	// CannotBeGranted can be set to false if this permission cannot be granted through the Raito Cloud UI.
	CannotBeGranted bool `protobuf:"varint,6,opt,name=cannotBeGranted,proto3" json:"cannotBeGranted,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DataObjectTypePermission) Reset() {
	*x = DataObjectTypePermission{}
	mi := &file_data_source_data_source_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataObjectTypePermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataObjectTypePermission) ProtoMessage() {}

func (x *DataObjectTypePermission) ProtoReflect() protoreflect.Message {
	mi := &file_data_source_data_source_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataObjectTypePermission.ProtoReflect.Descriptor instead.
func (*DataObjectTypePermission) Descriptor() ([]byte, []int) {
	return file_data_source_data_source_proto_rawDescGZIP(), []int{9}
}

func (x *DataObjectTypePermission) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *DataObjectTypePermission) GetGlobalPermissions() []string {
	if x != nil {
		return x.GlobalPermissions
	}
	return nil
}

func (x *DataObjectTypePermission) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Deprecated: Marked as deprecated in data_source/data_source.proto.
func (x *DataObjectTypePermission) GetAction() []string {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *DataObjectTypePermission) GetUsageGlobalPermissions() []string {
	if x != nil {
		return x.UsageGlobalPermissions
	}
	return nil
}

func (x *DataObjectTypePermission) GetCannotBeGranted() bool {
	if x != nil {
		return x.CannotBeGranted
	}
	return false
}

type DataObjectShareProperties struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// shareablePermissions is a list of permissions that can be shared of a specific data object
	ShareablePermissions []string `protobuf:"bytes,1,rep,name=shareablePermissions,proto3" json:"shareablePermissions,omitempty"`
	// correspondingSharedTypes is a list of data object types that can be shared with the current data object type
	CorrespondingSharedTypes []string `protobuf:"bytes,2,rep,name=correspondingSharedTypes,proto3" json:"correspondingSharedTypes,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *DataObjectShareProperties) Reset() {
	*x = DataObjectShareProperties{}
	mi := &file_data_source_data_source_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataObjectShareProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataObjectShareProperties) ProtoMessage() {}

func (x *DataObjectShareProperties) ProtoReflect() protoreflect.Message {
	mi := &file_data_source_data_source_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataObjectShareProperties.ProtoReflect.Descriptor instead.
func (*DataObjectShareProperties) Descriptor() ([]byte, []int) {
	return file_data_source_data_source_proto_rawDescGZIP(), []int{10}
}

func (x *DataObjectShareProperties) GetShareablePermissions() []string {
	if x != nil {
		return x.ShareablePermissions
	}
	return nil
}

func (x *DataObjectShareProperties) GetCorrespondingSharedTypes() []string {
	if x != nil {
		return x.CorrespondingSharedTypes
	}
	return nil
}

// NoLinting ToSupport GQL schema (temporarily)
type DataObjectTypeAction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Action name that is defined
	Action string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	// GlobalActions defines the corresponding global actions
	GlobalActions []string `protobuf:"bytes,2,rep,name=globalActions,proto3" json:"globalActions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataObjectTypeAction) Reset() {
	*x = DataObjectTypeAction{}
	mi := &file_data_source_data_source_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataObjectTypeAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataObjectTypeAction) ProtoMessage() {}

func (x *DataObjectTypeAction) ProtoReflect() protoreflect.Message {
	mi := &file_data_source_data_source_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataObjectTypeAction.ProtoReflect.Descriptor instead.
func (*DataObjectTypeAction) Descriptor() ([]byte, []int) {
	return file_data_source_data_source_proto_rawDescGZIP(), []int{11}
}

func (x *DataObjectTypeAction) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *DataObjectTypeAction) GetGlobalActions() []string {
	if x != nil {
		return x.GlobalActions
	}
	return nil
}

type UsageMetaInput struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	DefaultLevel  string                  `protobuf:"bytes,1,opt,name=defaultLevel,proto3" json:"defaultLevel,omitempty"`
	Levels        []*UsageMetaInputDetail `protobuf:"bytes,2,rep,name=levels,proto3" json:"levels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsageMetaInput) Reset() {
	*x = UsageMetaInput{}
	mi := &file_data_source_data_source_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsageMetaInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageMetaInput) ProtoMessage() {}

func (x *UsageMetaInput) ProtoReflect() protoreflect.Message {
	mi := &file_data_source_data_source_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageMetaInput.ProtoReflect.Descriptor instead.
func (*UsageMetaInput) Descriptor() ([]byte, []int) {
	return file_data_source_data_source_proto_rawDescGZIP(), []int{12}
}

func (x *UsageMetaInput) GetDefaultLevel() string {
	if x != nil {
		return x.DefaultLevel
	}
	return ""
}

func (x *UsageMetaInput) GetLevels() []*UsageMetaInputDetail {
	if x != nil {
		return x.Levels
	}
	return nil
}

type UsageMetaInputDetail struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DataObjectTypes []string               `protobuf:"bytes,2,rep,name=dataObjectTypes,proto3" json:"dataObjectTypes,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UsageMetaInputDetail) Reset() {
	*x = UsageMetaInputDetail{}
	mi := &file_data_source_data_source_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsageMetaInputDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageMetaInputDetail) ProtoMessage() {}

func (x *UsageMetaInputDetail) ProtoReflect() protoreflect.Message {
	mi := &file_data_source_data_source_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageMetaInputDetail.ProtoReflect.Descriptor instead.
func (*UsageMetaInputDetail) Descriptor() ([]byte, []int) {
	return file_data_source_data_source_proto_rawDescGZIP(), []int{13}
}

func (x *UsageMetaInputDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UsageMetaInputDetail) GetDataObjectTypes() []string {
	if x != nil {
		return x.DataObjectTypes
	}
	return nil
}

var File_data_source_data_source_proto protoreflect.FileDescriptor

const file_data_source_data_source_proto_rawDesc = "" +
	"\n" +
	"\x1ddata_source/data_source.proto\x12\vdata_source\x1a\x1bgoogle/protobuf/empty.proto\x1a\x18util/config/config.proto\x1a\x16util/error/error.proto\x1a\x1autil/version/version.proto\"\xf4\x01\n" +
	"\x14DataSourceSyncConfig\x125\n" +
	"\n" +
	"config_map\x18\x01 \x01(\v2\x16.util.config.ConfigMapR\tconfigMap\x12\x1f\n" +
	"\vtarget_file\x18\x02 \x01(\tR\n" +
	"targetFile\x12$\n" +
	"\x0edata_source_id\x18\x03 \x01(\tR\fdataSourceId\x12,\n" +
	"\x12data_object_parent\x18\x04 \x01(\tR\x10dataObjectParent\x120\n" +
	"\x14data_object_excludes\x18\x05 \x03(\tR\x12dataObjectExcludes\"l\n" +
	"\x14DataSourceSyncResult\x121\n" +
	"\x05error\x18\x01 \x01(\v2\x17.util.error.ErrorResultB\x02\x18\x01R\x05error\x12!\n" +
	"\fdata_objects\x18\x02 \x01(\x05R\vdataObjects\"\xc2\x04\n" +
	"\bMetaData\x12E\n" +
	"\x0fdataObjectTypes\x18\x01 \x03(\v2\x1b.data_source.DataObjectTypeR\x0fdataObjectTypes\x12,\n" +
	"\x11supportedFeatures\x18\x02 \x03(\tR\x11supportedFeatures\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x12\n" +
	"\x04icon\x18\x04 \x01(\tR\x04icon\x12A\n" +
	"\rusageMetaInfo\x18\x05 \x01(\v2\x1b.data_source.UsageMetaInputR\rusageMetaInfo\x12Q\n" +
	"\x13accessProviderTypes\x18\x06 \x03(\v2\x1f.data_source.AccessProviderTypeR\x13accessProviderTypes\x124\n" +
	"\x15supportsApInheritance\x18\a \x01(\bR\x15supportsApInheritance\x12F\n" +
	"\x0fmaskingMetadata\x18\b \x01(\v2\x1c.data_source.MaskingMetadataR\x0fmaskingMetadata\x12C\n" +
	"\x0efilterMetadata\x18\t \x01(\v2\x1b.data_source.FilterMetadataR\x0efilterMetadata\x12@\n" +
	"\rshareMetadata\x18\n" +
	" \x01(\v2\x1a.data_source.ShareMetadataR\rshareMetadata\"\xf6\x02\n" +
	"\x0eDataObjectType\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\x12\x12\n" +
	"\x04icon\x18\x04 \x01(\tR\x04icon\x12G\n" +
	"\vpermissions\x18\x05 \x03(\v2%.data_source.DataObjectTypePermissionR\vpermissions\x12;\n" +
	"\aactions\x18\x06 \x03(\v2!.data_source.DataObjectTypeActionR\aactions\x12\x1a\n" +
	"\bchildren\x18\a \x03(\tR\bchildren\x12\x1e\n" +
	"\n" +
	"dataOrigin\x18\b \x01(\tR\n" +
	"dataOrigin\x12P\n" +
	"\x0fshareProperties\x18\t \x01(\v2&.data_source.DataObjectSharePropertiesR\x0fshareProperties\"\xac\x04\n" +
	"\x12AccessProviderType\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x12\n" +
	"\x04icon\x18\x03 \x01(\tR\x04icon\x12$\n" +
	"\risNamedEntity\x18\x04 \x01(\bR\risNamedEntity\x12\"\n" +
	"\fcanBeCreated\x18\x05 \x01(\bR\fcanBeCreated\x12\"\n" +
	"\fcanBeAssumed\x18\x06 \x01(\bR\fcanBeAssumed\x12,\n" +
	"\x11canAssumeMultiple\x18\a \x01(\bR\x11canAssumeMultiple\x12&\n" +
	"\fcontainsWhat\x18\b \x01(\bB\x02\x18\x01R\fcontainsWhat\x12$\n" +
	"\vcontainsWho\x18\t \x01(\bB\x02\x18\x01R\vcontainsWho\x12(\n" +
	"\rwhoInputTypes\x18\n" +
	" \x03(\tB\x02\x18\x01R\rwhoInputTypes\x128\n" +
	"\x17identityStoreTypeForWho\x18\v \x01(\tR\x17identityStoreTypeForWho\x12D\n" +
	"\x1dallowedWhoAccessProviderTypes\x18\f \x03(\tR\x1dallowedWhoAccessProviderTypes\x12/\n" +
	"\x10commonParentType\x18\r \x01(\tH\x00R\x10commonParentType\x88\x01\x01B\x13\n" +
	"\x11_commonParentType\"\xe7\x01\n" +
	"\x0fMaskingMetadata\x126\n" +
	"\tmaskTypes\x18\x01 \x03(\v2\x18.data_source.MaskingTypeR\tmaskTypes\x128\n" +
	"\x17defaultMaskExternalName\x18\x02 \x01(\tR\x17defaultMaskExternalName\x128\n" +
	"\x17maskOverridePermissions\x18\x03 \x03(\tR\x17maskOverridePermissions\x12(\n" +
	"\x0fapplicableTypes\x18\x04 \x03(\tR\x0fapplicableTypes\"\x8f\x01\n" +
	"\vMaskingType\x12 \n" +
	"\vdisplayName\x18\x01 \x01(\tR\vdisplayName\x12\x1e\n" +
	"\n" +
	"externalId\x18\x02 \x01(\tR\n" +
	"externalId\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1c\n" +
	"\tdataTypes\x18\x04 \x03(\tR\tdataTypes\"x\n" +
	"\x0eFilterMetadata\x12<\n" +
	"\x19filterOverridePermissions\x18\x01 \x03(\tR\x19filterOverridePermissions\x12(\n" +
	"\x0fapplicableTypes\x18\x02 \x03(\tR\x0fapplicableTypes\"\xa3\x01\n" +
	"\rShareMetadata\x12(\n" +
	"\x0fapplicableTypes\x18\x01 \x03(\tR\x0fapplicableTypes\x12*\n" +
	"\x10commonParentType\x18\x02 \x01(\tR\x10commonParentType\x12<\n" +
	"\x19dataSourceShareIdentifier\x18\x03 \x01(\tR\x19dataSourceShareIdentifier\"\x88\x02\n" +
	"\x18DataObjectTypePermission\x12\x1e\n" +
	"\n" +
	"permission\x18\x01 \x01(\tR\n" +
	"permission\x12,\n" +
	"\x11globalPermissions\x18\x02 \x03(\tR\x11globalPermissions\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\x06action\x18\x04 \x03(\tB\x02\x18\x01R\x06action\x126\n" +
	"\x16usageGlobalPermissions\x18\x05 \x03(\tR\x16usageGlobalPermissions\x12(\n" +
	"\x0fcannotBeGranted\x18\x06 \x01(\bR\x0fcannotBeGranted\"\x8b\x01\n" +
	"\x19DataObjectShareProperties\x122\n" +
	"\x14shareablePermissions\x18\x01 \x03(\tR\x14shareablePermissions\x12:\n" +
	"\x18correspondingSharedTypes\x18\x02 \x03(\tR\x18correspondingSharedTypes\"T\n" +
	"\x14DataObjectTypeAction\x12\x16\n" +
	"\x06action\x18\x01 \x01(\tR\x06action\x12$\n" +
	"\rglobalActions\x18\x02 \x03(\tR\rglobalActions\"o\n" +
	"\x0eUsageMetaInput\x12\"\n" +
	"\fdefaultLevel\x18\x01 \x01(\tR\fdefaultLevel\x129\n" +
	"\x06levels\x18\x02 \x03(\v2!.data_source.UsageMetaInputDetailR\x06levels\"T\n" +
	"\x14UsageMetaInputDetail\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12(\n" +
	"\x0fdataObjectTypes\x18\x02 \x03(\tR\x0fdataObjectTypes2\x8b\x02\n" +
	"\x15DataSourceSyncService\x12R\n" +
	"\x15CliVersionInformation\x12\x16.google.protobuf.Empty\x1a!.util.version.CliBuildInformation\x12V\n" +
	"\x0eSyncDataSource\x12!.data_source.DataSourceSyncConfig\x1a!.data_source.DataSourceSyncResult\x12F\n" +
	"\x15GetDataSourceMetaData\x12\x16.util.config.ConfigMap\x1a\x15.data_source.MetaDataB\x94\x01\n" +
	"\x0fcom.data_sourceB\x0fDataSourceProtoP\x01Z(github.com/raito-io/cli/base/data_source\xa2\x02\x03DXX\xaa\x02\n" +
	"DataSource\xca\x02\n" +
	"DataSource\xe2\x02\x16DataSource\\GPBMetadata\xea\x02\n" +
	"DataSourceb\x06proto3"

var (
	file_data_source_data_source_proto_rawDescOnce sync.Once
	file_data_source_data_source_proto_rawDescData []byte
)

func file_data_source_data_source_proto_rawDescGZIP() []byte {
	file_data_source_data_source_proto_rawDescOnce.Do(func() {
		file_data_source_data_source_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_data_source_data_source_proto_rawDesc), len(file_data_source_data_source_proto_rawDesc)))
	})
	return file_data_source_data_source_proto_rawDescData
}

var file_data_source_data_source_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_data_source_data_source_proto_goTypes = []any{
	(*DataSourceSyncConfig)(nil),        // 0: data_source.DataSourceSyncConfig
	(*DataSourceSyncResult)(nil),        // 1: data_source.DataSourceSyncResult
	(*MetaData)(nil),                    // 2: data_source.MetaData
	(*DataObjectType)(nil),              // 3: data_source.DataObjectType
	(*AccessProviderType)(nil),          // 4: data_source.AccessProviderType
	(*MaskingMetadata)(nil),             // 5: data_source.MaskingMetadata
	(*MaskingType)(nil),                 // 6: data_source.MaskingType
	(*FilterMetadata)(nil),              // 7: data_source.FilterMetadata
	(*ShareMetadata)(nil),               // 8: data_source.ShareMetadata
	(*DataObjectTypePermission)(nil),    // 9: data_source.DataObjectTypePermission
	(*DataObjectShareProperties)(nil),   // 10: data_source.DataObjectShareProperties
	(*DataObjectTypeAction)(nil),        // 11: data_source.DataObjectTypeAction
	(*UsageMetaInput)(nil),              // 12: data_source.UsageMetaInput
	(*UsageMetaInputDetail)(nil),        // 13: data_source.UsageMetaInputDetail
	(*config.ConfigMap)(nil),            // 14: util.config.ConfigMap
	(*error1.ErrorResult)(nil),          // 15: util.error.ErrorResult
	(*emptypb.Empty)(nil),               // 16: google.protobuf.Empty
	(*version.CliBuildInformation)(nil), // 17: util.version.CliBuildInformation
}
var file_data_source_data_source_proto_depIdxs = []int32{
	14, // 0: data_source.DataSourceSyncConfig.config_map:type_name -> util.config.ConfigMap
	15, // 1: data_source.DataSourceSyncResult.error:type_name -> util.error.ErrorResult
	3,  // 2: data_source.MetaData.dataObjectTypes:type_name -> data_source.DataObjectType
	12, // 3: data_source.MetaData.usageMetaInfo:type_name -> data_source.UsageMetaInput
	4,  // 4: data_source.MetaData.accessProviderTypes:type_name -> data_source.AccessProviderType
	5,  // 5: data_source.MetaData.maskingMetadata:type_name -> data_source.MaskingMetadata
	7,  // 6: data_source.MetaData.filterMetadata:type_name -> data_source.FilterMetadata
	8,  // 7: data_source.MetaData.shareMetadata:type_name -> data_source.ShareMetadata
	9,  // 8: data_source.DataObjectType.permissions:type_name -> data_source.DataObjectTypePermission
	11, // 9: data_source.DataObjectType.actions:type_name -> data_source.DataObjectTypeAction
	10, // 10: data_source.DataObjectType.shareProperties:type_name -> data_source.DataObjectShareProperties
	6,  // 11: data_source.MaskingMetadata.maskTypes:type_name -> data_source.MaskingType
	13, // 12: data_source.UsageMetaInput.levels:type_name -> data_source.UsageMetaInputDetail
	16, // 13: data_source.DataSourceSyncService.CliVersionInformation:input_type -> google.protobuf.Empty
	0,  // 14: data_source.DataSourceSyncService.SyncDataSource:input_type -> data_source.DataSourceSyncConfig
	14, // 15: data_source.DataSourceSyncService.GetDataSourceMetaData:input_type -> util.config.ConfigMap
	17, // 16: data_source.DataSourceSyncService.CliVersionInformation:output_type -> util.version.CliBuildInformation
	1,  // 17: data_source.DataSourceSyncService.SyncDataSource:output_type -> data_source.DataSourceSyncResult
	2,  // 18: data_source.DataSourceSyncService.GetDataSourceMetaData:output_type -> data_source.MetaData
	16, // [16:19] is the sub-list for method output_type
	13, // [13:16] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_data_source_data_source_proto_init() }
func file_data_source_data_source_proto_init() {
	if File_data_source_data_source_proto != nil {
		return
	}
	file_data_source_data_source_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_data_source_data_source_proto_rawDesc), len(file_data_source_data_source_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_data_source_data_source_proto_goTypes,
		DependencyIndexes: file_data_source_data_source_proto_depIdxs,
		MessageInfos:      file_data_source_data_source_proto_msgTypes,
	}.Build()
	File_data_source_data_source_proto = out.File
	file_data_source_data_source_proto_goTypes = nil
	file_data_source_data_source_proto_depIdxs = nil
}
