// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: util/version/version.proto

package version

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SemVer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Major         uint64                 `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor         uint64                 `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch         uint64                 `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
	Prerelease    string                 `protobuf:"bytes,4,opt,name=prerelease,proto3" json:"prerelease,omitempty"`
	Build         string                 `protobuf:"bytes,5,opt,name=build,proto3" json:"build,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SemVer) Reset() {
	*x = SemVer{}
	mi := &file_util_version_version_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SemVer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemVer) ProtoMessage() {}

func (x *SemVer) ProtoReflect() protoreflect.Message {
	mi := &file_util_version_version_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemVer.ProtoReflect.Descriptor instead.
func (*SemVer) Descriptor() ([]byte, []int) {
	return file_util_version_version_proto_rawDescGZIP(), []int{0}
}

func (x *SemVer) GetMajor() uint64 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *SemVer) GetMinor() uint64 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *SemVer) GetPatch() uint64 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *SemVer) GetPrerelease() string {
	if x != nil {
		return x.Prerelease
	}
	return ""
}

func (x *SemVer) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

type CliBuildInformation struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CliBuildVersion   *SemVer                `protobuf:"bytes,1,opt,name=cli_build_version,json=cliBuildVersion,proto3" json:"cli_build_version,omitempty"`
	CliMinimalVersion *SemVer                `protobuf:"bytes,2,opt,name=cli_minimal_version,json=cliMinimalVersion,proto3" json:"cli_minimal_version,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CliBuildInformation) Reset() {
	*x = CliBuildInformation{}
	mi := &file_util_version_version_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CliBuildInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliBuildInformation) ProtoMessage() {}

func (x *CliBuildInformation) ProtoReflect() protoreflect.Message {
	mi := &file_util_version_version_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliBuildInformation.ProtoReflect.Descriptor instead.
func (*CliBuildInformation) Descriptor() ([]byte, []int) {
	return file_util_version_version_proto_rawDescGZIP(), []int{1}
}

func (x *CliBuildInformation) GetCliBuildVersion() *SemVer {
	if x != nil {
		return x.CliBuildVersion
	}
	return nil
}

func (x *CliBuildInformation) GetCliMinimalVersion() *SemVer {
	if x != nil {
		return x.CliMinimalVersion
	}
	return nil
}

var File_util_version_version_proto protoreflect.FileDescriptor

const file_util_version_version_proto_rawDesc = "" +
	"\n" +
	"\x1autil/version/version.proto\x12\futil.version\"\x80\x01\n" +
	"\x06SemVer\x12\x14\n" +
	"\x05major\x18\x01 \x01(\x04R\x05major\x12\x14\n" +
	"\x05minor\x18\x02 \x01(\x04R\x05minor\x12\x14\n" +
	"\x05patch\x18\x03 \x01(\x04R\x05patch\x12\x1e\n" +
	"\n" +
	"prerelease\x18\x04 \x01(\tR\n" +
	"prerelease\x12\x14\n" +
	"\x05build\x18\x05 \x01(\tR\x05build\"\x9d\x01\n" +
	"\x13CliBuildInformation\x12@\n" +
	"\x11cli_build_version\x18\x01 \x01(\v2\x14.util.version.SemVerR\x0fcliBuildVersion\x12D\n" +
	"\x13cli_minimal_version\x18\x02 \x01(\v2\x14.util.version.SemVerR\x11cliMinimalVersionB\x9c\x01\n" +
	"\x10com.util.versionB\fVersionProtoP\x01Z)github.com/raito-io/cli/base/util/version\xa2\x02\x03UVX\xaa\x02\fUtil.Version\xca\x02\fUtil\\Version\xe2\x02\x18Util\\Version\\GPBMetadata\xea\x02\rUtil::Versionb\x06proto3"

var (
	file_util_version_version_proto_rawDescOnce sync.Once
	file_util_version_version_proto_rawDescData []byte
)

func file_util_version_version_proto_rawDescGZIP() []byte {
	file_util_version_version_proto_rawDescOnce.Do(func() {
		file_util_version_version_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_util_version_version_proto_rawDesc), len(file_util_version_version_proto_rawDesc)))
	})
	return file_util_version_version_proto_rawDescData
}

var file_util_version_version_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_util_version_version_proto_goTypes = []any{
	(*SemVer)(nil),              // 0: util.version.SemVer
	(*CliBuildInformation)(nil), // 1: util.version.CliBuildInformation
}
var file_util_version_version_proto_depIdxs = []int32{
	0, // 0: util.version.CliBuildInformation.cli_build_version:type_name -> util.version.SemVer
	0, // 1: util.version.CliBuildInformation.cli_minimal_version:type_name -> util.version.SemVer
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_util_version_version_proto_init() }
func file_util_version_version_proto_init() {
	if File_util_version_version_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_util_version_version_proto_rawDesc), len(file_util_version_version_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_util_version_version_proto_goTypes,
		DependencyIndexes: file_util_version_version_proto_depIdxs,
		MessageInfos:      file_util_version_version_proto_msgTypes,
	}.Build()
	File_util_version_version_proto = out.File
	file_util_version_version_proto_goTypes = nil
	file_util_version_version_proto_depIdxs = nil
}
